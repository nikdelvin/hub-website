---
import '../styles/landing.css'
---

<!doctype html>
<html
    class="bg-black"
    lang="en"
>
    <head>
        <script
            is:inline
            async
            src="https://www.googletagmanager.com/gtag/js?id=G-NDYRS0B1HH"
        ></script>
        <script is:inline>
            window.dataLayer = window.dataLayer || []
            gtag('consent', 'default', {
                ad_storage: 'denied',
                ad_user_data: 'denied',
                ad_personalization: 'denied',
                analytics_storage: 'denied',
                functionality_storage: 'denied',
                personalization_storage: 'denied',
                security_storage: 'denied'
            })
            window.dataLayer.push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
            const gtagScript = document.getElementsByTagName('script')[0]
            const gtmScript = document.createElement('script')
            gtmScript.async = true
            gtmScript.src = 'https://www.googletagmanager.com/gtm.js?id=GTM-KCDNCQ9G'
            gtagScript.parentNode.insertBefore(gtmScript, gtagScript)
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())
            gtag('config', 'G-NDYRS0B1HH')
            gtag('consent', 'update', {
                ad_storage: 'granted',
                ad_user_data: 'granted',
                ad_personalization: 'granted',
                analytics_storage: 'granted',
                functionality_storage: 'granted',
                personalization_storage: 'granted',
                security_storage: 'granted'
            })
        </script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1"
        />
        <link
            rel="preload"
            as="image"
            href="assets/gradients/radial20.svg"
        />
        <link
            rel="preload"
            as="image"
            href="assets/icons/check3.svg"
        />
        <link
            rel="preload"
            as="image"
            href="assets/icons/chat-alt.svg"
        />
        <link
            rel="preload"
            as="image"
            href="assets/icons/chart-square-bar.svg"
        />
        <link
            rel="preload"
            as="image"
            href="assets/gradients/radial12.svg"
        />
        <link
            rel="preload"
            as="image"
            href="assets/gradients/radial11.svg"
        />
        <link
            rel="preload"
            as="image"
            href="assets/gradients/radial5.svg"
        />
        <link
            rel="preload"
            as="image"
            href="assets/gradients/radial6.svg"
        />
        <link
            rel="preload"
            as="image"
            href="assets/gradients/radial4.svg"
        />
        <link
            rel="preload"
            as="image"
            href="assets/gradients/radial3.svg"
        />
        <link
            rel="stylesheet"
            href={`https://fonts.googleapis.com/css2?family=Outfit:wght@500;600;700&amp;display=swap`}
        />
        <link
            rel="stylesheet"
            href={`https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&amp;display=swap`}
        />
    </head>
    <body class="opacity-0 transition-opacity duration-500 ease-in-out">
        <noscript
            ><iframe
                src="https://www.googletagmanager.com/ns.html?id=GTM-KCDNCQ9G"
                height="0"
                width="0"
                style="display:none;visibility:hidden"
            ></iframe></noscript
        >
        <slot />
    </body>
</html>
<script>
    const burgerMenu = document.querySelector('#burger-menu')
    const burgerMenuOpen = document.querySelector('#burger-menu-open')
    const burgerMenuClose = document.querySelector('#burger-menu-close')
    burgerMenuOpen?.addEventListener('click', function () {
        burgerMenu?.classList.remove('hidden')
        burgerMenu?.classList.add('block')
    })
    burgerMenuClose?.addEventListener('click', function () {
        burgerMenu?.classList.remove('block')
        burgerMenu?.classList.add('hidden')
    })
    const arrowNext = document.querySelector('#arrow-next')
    const arrowNextColor = document.querySelector('#arrow-next-color')
    const arrowBack = document.querySelector('#arrow-back')
    const arrowBackColor = document.querySelector('#arrow-back-color')
    const projectsSlider = document.querySelector('#projects-slider') as HTMLElement
    const activeSlide = Number(localStorage.getItem('activeSlide') ?? '0')
    const sliderState = { slideWidth: 0, activeSlide: activeSlide, slideCount: 9 }
    if (sliderState.activeSlide > 0 && sliderState.activeSlide < sliderState.slideCount) {
        for (let i = 0; i < sliderState.activeSlide; i++) {
            sliderState.slideWidth +=
                document.querySelector<HTMLElement>('#project' + sliderState.activeSlide)?.offsetWidth ?? 0
        }
        if (sliderState.activeSlide === sliderState.slideCount - 1) {
            arrowNextColor?.setAttribute('stroke', '#3F3F46')
            arrowBackColor?.setAttribute('stroke', 'white')
        } else {
            arrowNextColor?.setAttribute('stroke', 'white')
            if (sliderState.activeSlide === 0) arrowBackColor?.setAttribute('stroke', '#3F3F46')
            else arrowBackColor?.setAttribute('stroke', 'white')
        }
    }
    projectsSlider.style.transitionDuration = '0ms'
    projectsSlider.style.transform = 'translateX(-' + sliderState.slideWidth + 'px)'
    arrowNext?.addEventListener('click', function () {
        projectsSlider.style.transitionDuration = '500ms'
        if (sliderState.activeSlide < sliderState.slideCount - 1) {
            sliderState.activeSlide += 1
            localStorage.setItem('activeSlide', String(sliderState.activeSlide))
            sliderState.slideWidth +=
                document.querySelector<HTMLElement>('#project' + sliderState.activeSlide)?.offsetWidth ?? 0
            if (sliderState.activeSlide === sliderState.slideCount - 1) {
                arrowNextColor?.setAttribute('stroke', '#3F3F46')
                arrowBackColor?.setAttribute('stroke', 'white')
            } else {
                arrowNextColor?.setAttribute('stroke', 'white')
                if (sliderState.activeSlide === 0) arrowBackColor?.setAttribute('stroke', '#3F3F46')
                else arrowBackColor?.setAttribute('stroke', 'white')
            }
        } else {
            arrowNextColor?.setAttribute('stroke', '#3F3F46')
            arrowBackColor?.setAttribute('stroke', 'white')
            sliderState.activeSlide = sliderState.slideCount - 1
            localStorage.setItem('activeSlide', String(sliderState.activeSlide))
        }
        projectsSlider.style.transform = 'translateX(-' + sliderState.slideWidth + 'px)'
    })
    arrowBack?.addEventListener('click', function () {
        projectsSlider.style.transitionDuration = '500ms'
        if (sliderState.activeSlide > 0) {
            sliderState.activeSlide -= 1
            localStorage.setItem('activeSlide', String(sliderState.activeSlide))
            sliderState.slideWidth -=
                document.querySelector<HTMLElement>('#project' + (sliderState.activeSlide + 1))?.offsetWidth ?? 0
            if (sliderState.activeSlide === 0) {
                arrowBackColor?.setAttribute('stroke', '#3F3F46')
                arrowNextColor?.setAttribute('stroke', 'white')
            } else {
                arrowBackColor?.setAttribute('stroke', 'white')
                if (sliderState.activeSlide === sliderState.slideCount - 1)
                    arrowNextColor?.setAttribute('stroke', '#3F3F46')
                else arrowNextColor?.setAttribute('stroke', 'white')
            }
        } else {
            arrowBackColor?.setAttribute('stroke', '#3F3F46')
            arrowNextColor?.setAttribute('stroke', 'white')
            sliderState.activeSlide = 0
            localStorage.setItem('activeSlide', String(sliderState.activeSlide))
        }
        projectsSlider.style.transform = 'translateX(-' + sliderState.slideWidth + 'px)'
    })
    document.body.style.opacity = '100%'
</script>
